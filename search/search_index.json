{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to BeamPerms Docs!","text":"<p>Here you will find a complete documentation for the plugin, explaining how to install, setup, configure and use BeamPerms!</p>"},{"location":"#for-server-owners","title":"For Server Owners","text":"<p>You own a BeamMP server, and want to install the plugin? Take a look at our Installation Guide, were we will walk you through the installation process.</p>"},{"location":"#for-developers","title":"For Developers","text":"<p>You are making a BeamMP plugin and want to make it compatible with BeamPerms? Our Api Usage Guide is made for you!</p>"},{"location":"api/reference/","title":"API Reference","text":"<p>This page is dedicated to the reference of the API. Here, you will find the all the events that are available with the API, what are their parameters and how to use them.</p> <p>Information</p> <p>Please keep in mind that this page is for Experienced users, it requires some technical knowledge. Here is what you need to know:</p> <ul> <li>Lua</li> <li>BeamMP (Server scripting)</li> <li>General Programming Understanding</li> </ul>"},{"location":"api/reference/#example-of-an-api-event","title":"Example of an API Event","text":"<p>API Example Event</p> <pre><code>sequenceDiagram\nparticipant API as API Implementation\nparticipant BP as BeamPerms\n\nNote over BP,API: This is an example of an API call &lt;br&gt;&lt;br&gt; arg1: string &lt;br&gt; arg2: number &lt;br&gt;&lt;br&gt; result1: string &lt;br&gt; result2: number\nAPI-&gt;&gt;+BP: \"eventName\", arg1, arg2\nNote over BP: Process\nBP-&gt;&gt;-API: result1,result2</code></pre>"},{"location":"api/reference/#api-initialization-sequence","title":"API Initialization Sequence","text":"API Initialization Sequence <pre><code>sequenceDiagram\nparticipant API as API Implementation\nparticipant BP as BeamPerms\n\nNote over BP,API: Check if BeamPerms is present &lt;br&gt; (If there is an endpoint for the API)\nAPI-&gt;&gt;+BP: \"checkBpPresence\"\nalt\n    Note over BP: Endpoint Found\n    BP-&gt;&gt;-API: true\nelse\n    activate BP\n    Note over BP: Endpoint NOT Found &lt;br&gt; (By default BeamMP will return false)\n    BP--x-API: false\nend\n\nNote over BP,API: Check if API version is compatible &lt;br&gt;&lt;br&gt; API_VERSION: string (Example: \"v1.0.0\")\nAPI-&gt;&gt;+BP: \"checkBpApiCompatibility\", API_VERSION\nalt\n    Note over BP: Compatibility check is successful\n    BP-&gt;&gt;-API: true\nelse\n    activate BP\n    Note over BP: Compatibility check is NOT successful\n    BP-&gt;&gt;-API: false\nend</code></pre>"},{"location":"api/reference/v1-x-x/","title":"API v1.x.x","text":"<p>This is the reference for the version <code>v1.x.x</code> of the API.</p>"},{"location":"api/usage/","title":"Usage","text":"<p>Qui aliqua commodo laborum ad consequat pariatur. Amet consequat pariatur ex et nostrud sint laborum duis aute. Cillum consequat amet occaecat id sint. Aliquip consequat do incididunt enim cillum elit reprehenderit incididunt ut in eu qui culpa.</p>"},{"location":"api/usage/#versioning","title":"Versioning","text":"<p>The API uses Semantic Versioning. This means that any non-backward compatible change will result in an increment of the major version (<code>1.x.x</code> --&gt; <code>2.x.x</code>). You can be confident that your integration will remain stable across updates, as long as the major version does not change. Versions correspond to the API Reference.</p>"},{"location":"api/usage/#changelogs","title":"Changelogs","text":"<ul> <li>Version <code>v1.x.x</code> represents the initial release of the API.</li> </ul>"},{"location":"api/usage/#quick-start-guide","title":"Quick Start Guide","text":"<ul> <li>Adding the api to your project</li> <li>Initializing the API</li> <li>Amet ex quis magna ullamco amet.</li> <li>Ad id quis proident dolore irure nostrud minim labore laboris anim sint.</li> </ul>"},{"location":"api/usage/#adding-the-api-to-your-project","title":"Adding the api to your project","text":"<ol> <li>Download the Api file.</li> <li>Put in your project directory, under <code>/lua/api</code>.</li> <li>Do not rename it, or you will need to change <code>require(\"api/BeamPermsAPI\")</code>!</li> </ol> <p>If you did everything correctly, your project should look something like this: <pre><code>my_plugin/\n\u251c\u2500\u2500 lua/\n\u2502   \u2514\u2500\u2500 api/\n\u2502       \u2514\u2500\u2500 BeamPermsAPI.lua\n\u2514\u2500\u2500 main.lua\n</code></pre></p>"},{"location":"api/usage/#initializing-the-api","title":"Initializing the API","text":"<ol> <li>Requiring the API file <pre><code>BP = require(\"api/BeamPermsAPI\")\n</code></pre></li> <li>Checking if the API is available <pre><code>if BP.isDisabled() then\n  ... -- The API is not available, functions will not be registered!\nend\n</code></pre></li> </ol> <p>Which gives us the final code for the API: <pre><code>BP = require(\"api/BeamPermsAPI\")\n\n...\n\nif BP.isDisabled() then\n  print(\"BeamPermsAPI is disabled, ...\")\nend\n</code></pre></p> <p> You can now use the API</p>"},{"location":"features/","title":"Features","text":"<p> Web Editor \u2013 Context</p> <ul> <li> <p> Context \u2013 Context</p> </li> <li> <p> Weight \u2013 Context</p> </li> <li> <p> Prefix, Suffix \u2013 Context</p> </li> <li> <p> Meta \u2013 Context</p> </li> </ul> <p> Groups \u2013 Context</p>"},{"location":"features/groups/","title":"Groups","text":"<p>Feature not yet implemented!</p> <p>This feature is not yet implemented, but planned for future releases!</p>"},{"location":"features/webeditor/","title":"Web Editor","text":"<p>Feature not yet implemented!</p> <p>This feature is not yet implemented, but planned for future releases!</p>"}]}